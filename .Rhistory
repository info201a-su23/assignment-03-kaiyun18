location_most_deaths <- counties %>%
filter(deaths == max(deaths, na.rm = TRUE)) %>%
pull(location)
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = lag(cases, n = 1L, default = NULL))
View(national)
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = lag(cases, n = -1L, default = NULL))
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = lag(cases, n = -1, default = NULL))
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = lag(cases, n = 1, default = NULL))
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = lag(cases, n = 0-1, default = NULL))
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = lag(cases, n = 0, default = NULL))
# 2.k Add a new column to your `national` data frame called `new_cases` — that
# is, the number new cases each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_cases = cases - lag(cases, n = 1, default = NULL))
# 2.f Which state has had the fewest number of cases as of the most
# recent date? Make sure to pull() this value `state_lowest_cases`
state_lowest_cases <- min(states %>%
filter(date == max(date, na.rm = TRUE)) %>%
pull(cases))
# 2.h Which county had this highest number of cases? Make sure to pull() this
# COUNTY `county_highest_cases`
county_highest_cases <- counties %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(county)
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has
# the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_deaths = deaths - lag(casdeathses, n = 1, default = NULL))
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has
# the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_deaths = deaths - lag(death, n = 1, default = NULL))
# 2.l Similarly, the `deaths` columns is *not* the number of new deaths per day.
# Add  a new column to the `national` data frame called `new_deaths` that has
# the number of *new* deaths each day.
# HINT: The dyplr lag() function will be very helpful here.
national <- mutate(national, new_deaths = deaths - lag(deaths, n = 1, default = NULL))
# 2.m What was the date when the most new cases in the U.S. occurred? Make sure
# to pull() this value `date_most_cases`
date_most_cases <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(date)
# 2.m What was the date when the most new cases in the U.S. occurred? Make sure
# to pull() this value `date_most_cases`
date_most_cases <- national %>%
filter(new_cases == max(new_cases, na.rm = TRUE)) %>%
pull(date)
# 2.n What was the date when the most new deaths in the U.S. occurred? Make sure
# to pull() this value `date_most_deaths`
date_most_deaths <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(date)
# 2.o How many people died on the date when the most deaths occurred? Make sure
# to pull() this value `most_deaths`
most_deaths <- national %>%
filter(new_deaths == max(new_deaths, na.rm = TRUE)) %>%
pull(deaths)
# You can plot this data with built-in plot functions
plot(national$new_cases)
plot(national$new_deaths)
View(states)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_each_state)
View(highest_cases_in_each_state)
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_each_state)
highest_cases_in_each_state <- counties %>%
filter(date == max(date, na.rm = TRUE)) %>%
group_by(state) %>%
summarize(highest_county = max(location, na.rm = TRUE))
View(highest_cases_in_each_state)
highest_cases_in_each_state1 <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_each_state1)
View(counties)
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
summarise(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup() %>%
pull())
View(highest_cases_in_each_state)
View(highest_cases_in_each_state1)
ungroup()
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
summarise(cases == max(cases, na.rm = TRUE)))
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)))
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
select(state, county, cases))
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
select())
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE)))
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
summarise(county) %>%
filter(cases == max(cases, na.rm = TRUE)))
View(highest_cases_in_each_state)
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- data.frame(counties %>%
group_by(state) %>%
summarise(county) %>%
filter(cases == max(cases, na.rm = TRUE)))
# 3.a For each state, what is the county with the highest number of COVID cases?
# Make a dataframe that has every state and the county with the highest number
# of cases and corresponding rows (hint: you will need to use a grouping
# operation and a filter)
# Save as `highest_cases_in_each_state`
highest_cases_in_each_state <- counties %>%
group_by(state) %>%
filter(cases == max(cases, na.rm = TRUE))
# 3.b For each state, what is the county with the lowest number of COVID-related
# deaths (not cases this time)?
# Make a dataframe that has every state and the county with lowest number of
# deaths and corresponding rows (hint: you will need to use a grouping operation
# and a filter)
# Save as `lowest_deaths_in_each_state`
lowest_deaths_in_each_state <- data.frame(
group_by(state) %>%
filter(deaths == min(deaths, na.rm = TRUE)) %>%
ungroup())
# 3.b For each state, what is the county with the lowest number of COVID-related
# deaths (not cases this time)?
# Make a dataframe that has every state and the county with lowest number of
# deaths and corresponding rows (hint: you will need to use a grouping operation
# and a filter)
# Save as `lowest_deaths_in_each_state`
lowest_deaths_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(deaths == min(deaths, na.rm = TRUE)) %>%
ungroup())
View(lowest_deaths_in_each_state)
# 4.a Create a `total_cases_counties` dataframe that adds up all the COIVD cases
# for all the counties for every date in the counties dataframe.
# You should name the columns `date` and `county_total_cases`.
total_cases_counties <- counties %>%
group_by(date) %>%
summarise(county_total_cases = sum(cases))
View(total_cases_counties)
# 4.b Join `total_cases_counties` with the `national` dataframe.
# Save this dataframe as `all_totals`.
all_totals <- left_join(total_cases_counties, national, by = "date")
# 4.c Filter the all_totals dataframe to find only the rows where the
# "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>%
filter(county_total_cases != national_cases)
# 4.c Filter the all_totals dataframe to find only the rows where the
# "county_total_cases" column does not match the "cases" column
# Save as national_county_diff
national_county_diff <- all_totals %>%
filter(county_total_cases != cases)
# 4.d Calculate the number of rows in the national_county_diff dataframe
# Save as num_national_county_diff
num_national_county_diff <- nrow(national_county_diff)
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(my_answer)
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
View(my_answer)
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- sum(pull(national, deaths))
# 2.a How many total COVID cases have there been in the U.S. by the most recent
# date in the dataset? Make sure to pull() this number `total_us_cases`
total_us_cases <- national %>%
filter(date == max(date, na.rm = TRUE)) %>%
pull(cases)
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- sum(pull(national, max(deaths))
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- pull(national, max(deaths)
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- pull(national, max(deaths))
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- max(pull(national, deaths), na.rm = TRUE)
# 2.a How many total COVID cases have there been in the U.S. by the most recent
# date in the dataset? Make sure to pull() this number `total_us_cases`
total_us_cases <- max(pull(national, cases), na.rm = TRUE)
# 2.a How many total COVID cases have there been in the U.S. by the most recent
# date in the dataset? Make sure to pull() this number `total_us_cases`
total_us_cases <- national %>%
filter(date == max(date)) %>%
pull(cases)
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- national %>%
filter(date == max(date)) %>%
pull(deaths)
# 2.c Which state has had the highest number of COVID cases? Make sure to pull()
# this value `state_highest_cases`
state_highest_cases <- max(pull(national, cases))
# 2.c Which state has had the highest number of COVID cases? Make sure to pull()
# this value `state_highest_cases`
state_highest_cases <- national %>%
filter(cases == max(cases)) %>%
pull(state)
# 2.c Which state has had the highest number of COVID cases? Make sure to pull()
# this value `state_highest_cases`
state_highest_cases <- states %>%
filter(cases == max(cases)) %>%
pull(state)
state_highest_cases <- states %>%
filter(cases == min(cases)) %>%
pull(state)
state_low <- states %>%
filter(cases == min(cases)) %>%
pull(state)
# 2.c Which state has had the highest number of COVID cases? Make sure to pull()
# this value `state_highest_cases`
state_highest_cases <- states %>%
filter(cases == max(cases), na.rm ==TRUE) %>%
pull(state)
# 2.c Which state has had the highest number of COVID cases? Make sure to pull()
# this value `state_highest_cases`
state_highest_cases <- states %>%
filter(cases == max(cases, na.rm ==TRUE)) %>%
pull(state)
# 2.c Which state has had the highest number of COVID cases? Make sure to pull()
# this value `state_highest_cases`
state_highest_cases <- states %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
pull(state)
state_low <- states %>%
filter(cases == min(cases, na.rm =TRUE)) %>%
pull(state)
# 2.e Which state has the highest ratio of deaths to cases (deaths/cases), as of
# the most recent date? Make sure to pull() this value
# HINT: You may need to create a new column in order to do this:
# `state_highest_ratio`
state_highest_ratio <- max(states %>%
mutate(deaths/cases) %>%
pull(), na.rm = TRUE)
# Reflection 3 (answer in README.md file)
# Inspect the `highest_cases_in_each_state` dataframe
# Which county has the highest number of cases in the state of Washington, and
# does it surprise you? Why or why not? (You may need to google this county to
# learn about it)
highest_cases_in_UA <- data.frame(counties %>%
group_by(state) %>%
filter(state == "Washington")
filter(cases == max(cases, na.rm = TRUE)) %>%
# Reflection 3 (answer in README.md file)
# Inspect the `highest_cases_in_each_state` dataframe
# Which county has the highest number of cases in the state of Washington, and
# does it surprise you? Why or why not? (You may need to google this county to
# learn about it)
highest_cases_in_UA <- data.frame(counties %>%
group_by(state) %>%
filter(state == "Washington") %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(highest_cases_in_UA)
# Reflection 3 (answer in README.md file)
# Inspect the `highest_cases_in_each_state` dataframe
# Which county has the highest number of cases in the state of Washington, and
# does it surprise you? Why or why not? (You may need to google this county to
# learn about it)
highest_cases_in_WA <- data.frame(counties %>%
group_by(state) %>%
filter(state == "Washington") %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
View(all_totals)
View(my_answer)
#  Write code (at least 2-3 lines) that will answer your question
unique_county <- unique(pull(counties, county))
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
View(my_answer)
#  Write code (at least 2-3 lines) that will answer your question
unique_county <- unique(pull(counties, county))
unique_location <- unique(pull(counties, location))
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(location) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(county) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(location) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(location) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
# Reflection 3 (answer in README.md file)
# Inspect the `highest_cases_in_each_state` dataframe
# Which county has the highest number of cases in the state of Washington, and
# does it surprise you? Why or why not? (You may need to google this county to
# learn about it)
highest_cases_in_WA <- data.frame(counties %>%
group_by(state) %>%
filter(state == "Washington") %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
# 3.b For each state, what is the county with the lowest number of COVID-related
# deaths (not cases this time)?
# Make a dataframe that has every state and the county with lowest number of
# deaths and corresponding rows (hint: you will need to use a grouping operation
# and a filter)
# Save as `lowest_deaths_in_each_state`
lowest_deaths_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(deaths == min(deaths, na.rm = TRUE)) %>%
ungroup())
# 3.b For each state, what is the county with the lowest number of COVID-related
# deaths (not cases this time)?
# Make a dataframe that has every state and the county with lowest number of
# deaths and corresponding rows (hint: you will need to use a grouping operation
# and a filter)
# Save as `lowest_deaths_in_each_state`
lowest_deaths_in_each_state <- data.frame(counties %>%
group_by(state) %>%
filter(deaths == min(deaths, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(location) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
ungroup())
#  Write code (at least 2-3 lines) that will answer your question
my_answer <- data.frame(counties %>%
group_by(location) %>%
filter(cases == max(cases, na.rm = TRUE)) %>%
filter(date == max(date, na.rm = TRUE)) %>%
ungroup())
# 2.a How many total COVID cases have there been in the U.S. by the most recent
# date in the dataset? Make sure to pull() this number `total_us_cases`
total_us_cases <- national %>%
filter(date == max(date)) %>%
pull(cases)
# 2.b How many total COVID-related deaths have there been in the U.S. by the
# most recent date in the dataset? Make sure to pull() this number
# `total_us_deaths`
total_us_deaths <- national %>%
filter(date == max(date)) %>%
pull(deaths)
# 2.d What is the highest number of cases in a state? Make sure to pull() this
# number `num_highest_state`
num_highest_state <- max(pull(states, cases))
